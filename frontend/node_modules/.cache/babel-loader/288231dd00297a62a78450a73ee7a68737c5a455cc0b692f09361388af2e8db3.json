{"ast":null,"code":"// src/components/Login.js\nimport React,{useState}from'react';// Login-komponentti käsittelee käyttäjän kirjautumisen\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){// useState hook luo tilan kirjautumistiedoille: käyttäjänimi ja salasana\nconst[credentials,setCredentials]=useState({username:'',password:''});// handleChange-funktio päivittää tilan, kun käyttäjä muuttaa lomakkeen kenttää\nconst handleChange=e=>{// Päivitetään vastaava kenttä tilassa\nsetCredentials({...credentials,[e.target.name]:e.target.value});};// handleSubmit-funktio käsittelee lomakkeen lähetyksen\nconst handleSubmit=e=>{e.preventDefault();// Tulostetaan kirjautuneen käyttäjän tiedot konsoliin\nconsole.log('Käyttäjä kirjautunut sisään:',credentials);// Näytetään ilmoitus onnistuneesta kirjautumisesta\nalert('Kirjautuminen onnistui');};// Lomakkeen renderöinti\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Kirjaudu sis\\xE4\\xE4n\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"K\\xE4ytt\\xE4j\\xE4nimi:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",value:credentials.username,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Salasana:\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:credentials.password,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Kirjaudu\"})]})]});}export default Login;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Login","credentials","setCredentials","username","password","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","alert","children","onSubmit","type","onChange"],"sources":["C:/Users/23755/Documents/backupit 2/user-management-app/frontend/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\r\nimport React, { useState } from 'react';\r\n\r\n// Login-komponentti käsittelee käyttäjän kirjautumisen\r\nfunction Login() {\r\n    // useState hook luo tilan kirjautumistiedoille: käyttäjänimi ja salasana\r\n    const [credentials, setCredentials] = useState({ username: '', password: ''});\r\n\r\n    // handleChange-funktio päivittää tilan, kun käyttäjä muuttaa lomakkeen kenttää\r\n    const handleChange = (e) => {\r\n        // Päivitetään vastaava kenttä tilassa\r\n        setCredentials({\r\n                ...credentials,    \r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    // handleSubmit-funktio käsittelee lomakkeen lähetyksen\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Tulostetaan kirjautuneen käyttäjän tiedot konsoliin\r\n        console.log('Käyttäjä kirjautunut sisään:', credentials);\r\n        // Näytetään ilmoitus onnistuneesta kirjautumisesta\r\n        alert('Kirjautuminen onnistui');\r\n    };\r\n    // Lomakkeen renderöinti\r\n    return (\r\n        <div>\r\n            <h2>Kirjaudu sisään</h2>\r\n             {/* Lomakkeen lähetys kutsuu handleSubmit-funktiota */}\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                Käyttäjänimi:\r\n                    {/* Tekstikenttä, joka päivittää username-tilan */}\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={credentials.username}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Salasana:\r\n                    {/* Salasanojen syöttökenttä, joka päivittää password-tilan */}\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={credentials.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n                <br />\r\n                {/* Kirjautumispainike */}\r\n                <button type=\"submit\">Kirjaudu</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default Login;"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAEvC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,QAAS,CAAAC,KAAKA,CAAA,CAAG,CACb;AACA,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGP,QAAQ,CAAC,CAAEQ,QAAQ,CAAE,EAAE,CAAEC,QAAQ,CAAE,EAAE,CAAC,CAAC,CAE7E;AACA,KAAM,CAAAC,YAAY,CAAIC,CAAC,EAAK,CACxB;AACAJ,cAAc,CAAC,CACP,GAAGD,WAAW,CAClB,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,EAAGF,CAAC,CAACC,MAAM,CAACE,KAC9B,CAAC,CAAC,CACN,CAAC,CACD;AAEA,KAAM,CAAAC,YAAY,CAAIJ,CAAC,EAAK,CACxBA,CAAC,CAACK,cAAc,CAAC,CAAC,CAClB;AACAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEZ,WAAW,CAAC,CACxD;AACAa,KAAK,CAAC,wBAAwB,CAAC,CACnC,CAAC,CACD;AACA,mBACIf,KAAA,QAAAgB,QAAA,eACIlB,IAAA,OAAAkB,QAAA,CAAI,uBAAe,CAAI,CAAC,cAExBhB,KAAA,SAAMiB,QAAQ,CAAEN,YAAa,CAAAK,QAAA,eACzBhB,KAAA,UAAAgB,QAAA,EAAO,wBAEH,cACAlB,IAAA,UACIoB,IAAI,CAAC,MAAM,CACXT,IAAI,CAAC,UAAU,CACfC,KAAK,CAAER,WAAW,CAACE,QAAS,CAC5Be,QAAQ,CAAEb,YAAa,CAC1B,CAAC,EACC,CAAC,cACRR,IAAA,QAAK,CAAC,cACNE,KAAA,UAAAgB,QAAA,EAAO,WAEH,cACAlB,IAAA,UACIoB,IAAI,CAAC,UAAU,CACfT,IAAI,CAAC,UAAU,CACfC,KAAK,CAAER,WAAW,CAACG,QAAS,CAC5Bc,QAAQ,CAAEb,YAAa,CAC1B,CAAC,EACC,CAAC,cACRR,IAAA,QAAK,CAAC,cAENA,IAAA,WAAQoB,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACrC,CAAC,EACN,CAAC,CAEd,CACA,cAAe,CAAAf,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}